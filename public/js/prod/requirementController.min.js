var requirementApp=angular.module("requirementApp",["propagateServiceModule","ngRoute","ui.bootstrap"]);requirementApp.filter("startFrom",function(){return function(a,b){return a?(b=+b,a.slice(b)):[]}}),requirementApp.config(["$routeProvider","$locationProvider",function(a){a.when("/list",{title:"View Requirement",templateUrl:base_url+"/requirements/list",controller:"requirementController"}).when("/add",{title:"Add Requirement",templateUrl:base_url+"/requirements/add",controller:"requirementAddCtrl"}).when("/edit/:id",{title:"Edit Requirement",templateUrl:base_url+"/requirements/add",controller:"requirementAddCtrl"}).when("/view/:id",{title:"View Requirement",templateUrl:base_url+"requirements/view",controller:"requirementViewCtrl"}).otherwise({redirectTo:"/list"})}]),requirementApp.controller("mainCtrl",["$scope","propagateService",function(a){a.$on("MsgEvent",function(b,c){a.infoMsg=c}),a.infoMsg=""}]),requirementApp.controller("requirementController",["$scope","propagateService","$location",function(a,b,c){var d="GET",e="req-list";b.apiCall("getRequirements",d,e).then(function(b){a.requirements=b.data,a.currentPage=1,a.entryLimit=10,a.filteredItems=a.requirements.length,a.totalItems=a.requirements.length}),a.setPage=function(b){a.currentPage=b},a.filter=function(){$timeout(function(){a.filteredItems=a.filtered.length},10)},a.sort_by=function(b){a.predicate=b,a.reverse=!a.reverse},a.deleteRequirement=function(d){var e="DELETE",f="req-list/"+d;b.apiCall("DeleteRequirement",e,f).then(function(b){a.$emit("MsgEvent",b.data.message),c.path("/")})}}]),requirementApp.controller("requirementViewCtrl",["$scope","propagateService","$routeParams",function(a,b,c){if(a.$emit("MsgEvent",""),c.id){var d=c.id,e="GET",f="req-list/"+d+"/edit";b.apiCall("getSingleRequirement",e,f).then(function(b){b.data&&(a.requirement=b.data)})}}]),requirementApp.controller("requirementAddCtrl",["$scope","propagateService","$routeParams","$location",function(a,b,c,d){if(a.requirement={},a.submitClicked=!1,a.$emit("MsgEvent",""),c.id){var e=a.requirement.id=c.id,f="GET",g="req-list/"+e+"/edit";b.apiCall("getSingleRequirement",f,g).then(function(b){b.data&&(a.requirement=b.data)}),a.save_requirement=function(){if(a.submitClicked=!0,a.addRequirementForm.$invalid);else{var c="PUT",f="req-list/"+e;b.apiCall("updateRequirement",c,f,a.requirement).then(function(b){a.$emit("MsgEvent",b.data.message),d.path("/")})["catch"](function(b){a.$emit("MsgEvent",b.data.message+b.data.data)})}}}else a.save_requirement=function(){if(a.submitClicked=!0,a.addRequirementForm.$invalid);else{var c="POST",e="req-list/";b.apiCall("addRequirement",c,e,a.requirement).then(function(b){console.log("Add Msg ==== "+JSON.stringify(b)),a.$emit("MsgEvent",b.data.message),d.path("/")})}};a.show_error=function(b){if(a.submitClicked){if(a.addRequirementForm[b].$invalid)return"error"}else if(a.addRequirementForm[b].$invalid&&a.addRequirementForm[b].$dirty)return"error";return""}}]);